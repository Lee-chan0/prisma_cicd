# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - run: yarn install --frozen-lockfile

    - name: create env file
      working-directory: ./
      run: |
        pwd
        touch .env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
        cat .env
    
    - name: build server files
      working-directory: ./
      run: |
        yarn
    
    
    
    - name: zip file
      run: zip -r ci.zip ./src/* ./scripts ./appspec.yml ./.env ./package.jon ./yarn.lock ./prisma/*

    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: upload to S3
      run: aws s3 cp --region ap-northeast-2 ./ci.zip s3://my-s3-cicd-bucket/deploy/

    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name cicd_codedeploy
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name codedeploy_group
        --s3-location bucket=my-s3-cicd-bucket,bundleType=zip,key=deploy/ci.zip
